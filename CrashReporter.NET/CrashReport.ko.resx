<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>취소</value>
  </data>
  <data name="buttonSave.Text" xml:space="preserve">
    <value>저장</value>
  </data>
  <data name="buttonSendReport.Text" xml:space="preserve">
    <value>리포트 전송</value>
  </data>
  <data name="checkBoxIncludeScreenshot.Text" xml:space="preserve">
    <value>스크린샷 포함</value>
  </data>
  <data name="checkBoxIncludeScreenshot.ToolTip" xml:space="preserve">
    <value>에러 리포트에 에러 발생 당시의 화면을 첨부합니다.</value>
  </data>
  <data name="EmailRequiredError" xml:space="preserve">
    <value>에러 리포트 전송을 위해 올바른 메일 주소가 필요합니다. 또한 버그가 수정되면 개발자로부터 알림을 받으실 수 있습니다.</value>
  </data>
  <data name="ErrorCapturingImageCaption" xml:space="preserve">
    <value>캡쳐된 이미지 없음.</value>
  </data>
  <data name="ErrorCapturingImageMessage" xml:space="preserve">
    <value>스크린샷을 찍는 도중에 에러가 발생하였습니다. 스크린샷 없이도 에러 리포트를 보낼 수 있습니다.</value>
  </data>
  <data name="groupBoxScreenshot.Text" xml:space="preserve">
    <value>스크린샷</value>
  </data>
  <data name="InvalidEmailAddressError" xml:space="preserve">
    <value>이메일이 올바르지 않습니다. 올바른 이메일을 적어주세요.</value>
  </data>
  <data name="labelApplication.Text" xml:space="preserve">
    <value>애플리케이션</value>
  </data>
  <data name="labelEmail.Text" xml:space="preserve">
    <value>메일</value>
  </data>
  <data name="labelExceptionMessage.Text" xml:space="preserve">
    <value>메세지</value>
  </data>
  <data name="labelExceptionType.Text" xml:space="preserve">
    <value>예외 유형</value>
  </data>
  <data name="labelMessage.Text" xml:space="preserve">
    <value>프로그램에서 오류가 발생한 경위를 작성해주세요. 이는 저희가 버그를 고칠때 큰 도움이 됩니다</value>
  </data>
  <data name="labelSource.Text" xml:space="preserve">
    <value>근원</value>
  </data>
  <data name="labelStackTrace.Text" xml:space="preserve">
    <value>스택 트레이스</value>
  </data>
  <data name="labelTime.Text" xml:space="preserve">
    <value>시간</value>
  </data>
  <data name="labelVersion.Text" xml:space="preserve">
    <value>버전</value>
  </data>
  <data name="linkLabelView.Text" xml:space="preserve">
    <value>스크린샷 크게 보기</value>
  </data>
  <data name="MessageSentCaption" xml:space="preserve">
    <value>에러 리포트가 전송되었습니다.</value>
  </data>
  <data name="MessageSentMessage" xml:space="preserve">
    <value>에러리포트 {0} {1} 가 개발자에게 전송되었습니다. 도움을 주셔서 감사합니다.</value>
  </data>
  <data name="NoImageShownCaption" xml:space="preserve">
    <value>이미지를 여는데 실패함.</value>
  </data>
  <data name="NoImageShownMessage" xml:space="preserve">
    <value>에러 발생, 이미지가 표시되지 않습니다.</value>
  </data>
  <data name="ReportFileName" xml:space="preserve">
    <value>{0} {1} 에러 리포트.</value>
  </data>
  <data name="tabPageExceptions.Text" xml:space="preserve">
    <value>에러 내용</value>
  </data>
  <data name="tabPageGeneral.Text" xml:space="preserve">
    <value>일반</value>
  </data>
  <data name="tabPageScreenshot.Text" xml:space="preserve">
    <value>스크린샷</value>
  </data>
  <data name="TitleText" xml:space="preserve">
    <value>{0} {1} 크래시 발생</value>
  </data>
  <data name="toolTip.ToolTipTitle" xml:space="preserve">
    <value>애플리케이션 스크린샷 포함</value>
  </data>
</root>